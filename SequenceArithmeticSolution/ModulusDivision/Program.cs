// See https://aka.ms/new-console-template for more information
Console.WriteLine("\n\tHello, Modulus Division!\n\n");

///<summary>
///
/// Name: don welch
/// Last date modified: May 27 2024
/// 
/// Problem:
/// Write a program that reads an integer between 0 and 1000 and 
/// adds all the digits in the integer. For example, if an integer is 932, 
/// the sum of all its digits is 14.
/// 
/// Instead of reading a value, this example will use a built-in class called
/// Random to randomly generate a number between 0 and 1000.
/// 
/// Detail Steps
/// DECLARE rnd as Random
/// DECLARE rndNum as integer
/// DELCARE digitSum as integer
/// DELCARE hundreds as integer
/// DELCARE tens as integer
/// DELCARE units as integer
/// DECLARE tempDigits as integer //the temp variable to obtain remainder digits
/// SET rnd to an instance of Random
/// SET rndNum to a value generated by rnd(1-1000)
/// OBTAIN the hundreds digit from rndNum
/// OBTAIN the tens digit from rndNum
/// OBTAIN the units digit from rndNum
/// SET digitSun to the sum of the rndNum digits (hundreds + tens + units)
/// DISPLAY the digit sum (digitSum) along with the random number (rndNum)
/// </summary>

Random rnd; //declared like this statement did NOT create the actual generator
rnd = new Random(); //this statement will ask the system to create an instance
                    //  of the class Random()
                    //this variable now represents your random number generator

int rndNum, digitSum, hundreds, tens, units, tempDigits;

//the following statement uses a genertor method called .Next()
//we will supply a range to the method to limit the number that will be generated
//An important note: the range is from your lower limit to 1 less then your specified
//                      upper limit
rndNum = rnd.Next(1, 1000); //the random number will be 1 to 999 inclusive

//hundreds digit
//integer division
//   integer division gives no remainder values
hundreds = rndNum / 100;

//to obtain the remainder of the previous calculation, we will use Modulus division
tempDigits = rndNum % 100; //this obtains the remainder as an integer value

//tens digit
tens = tempDigits / 10;
units = tempDigits % 10;

digitSum = hundreds + tens + units;

Console.WriteLine($"\nThe sum of the digits of {rndNum} is {digitSum}");